function myPipe = pd_analysis(varargin)
% PD_ANALYSIS - Extraction of pupil diameter features

import meegpipe.node.*;
import pupillator.nodes.*;
import physioset.event.class_selector;
import physioset.event.value_selector;
import physioset.event.cascade_selector;
import pset.selector.event_selector;

USE_OGE = true;
DO_REPORT = true;

nodeList = {};

% Data importer
myNode = physioset_import.new('Importer', physioset.import.pupillator);
nodeList = [nodeList {myNode}];

% Pre-process the PD traces
myNode = pd_preproc.new;
nodeList = [nodeList {myNode}];

% Extract basic PD features:
%
% * Normalized pupil diameter: average pupil diameter divided by average 
%   pupil diameter during the pre-red block
%

featList = {...
    @(feats, sel) feats(1)/feats(1), ...
    @(feats, sel) feats(2)/feats(1), ...
    @(feats, sel) feats(3)/feats(1), ...
    @(feats, sel) feats(4)/feats(1), ...
    @(feats, sel) feats(5)/feats(1), ...
    };

featNames = {...
    'pd_pre_red', ...
    'pd_red', ...
    'pd_dark', ...
    'pd_blue', ...
    'pd_post_blue' ...
    };

mySel = cell(5, 1);
% Select pre-red blocks
mySel{1} = event_selector(class_selector('Type', '^block_dark_pre'));
mySel{2} = event_selector(class_selector('Type', '^block_red'));
mySel{3} = event_selector(class_selector('Type', '^block_dark(_pvt|)$'));
mySel{4} = event_selector(class_selector('Type', '^block_blue'));
mySel{5} = event_selector(class_selector('Type', '^block_dark_post'));

myNode = generic_features.new(...
    'TargetSelector',   mySel, ...
    'FirstLevel',       @(x, sel) mean(x(:)), ...
    'SecondLevel',      featList, ...
    'FeatureNames',     featNames, ...
    'DataSelector',     pset.selector.sensor_label('diameter') ...
    );
    
nodeList = [nodeList {myNode}];

myPipe = pipeline.new(...
    'Name',             'pupillator-pd', ...
    'NodeList',         nodeList, ...
    'Save',             true, ...
    'OGE',              USE_OGE, ...
    'GenerateReport',   DO_REPORT, ...
    varargin{:});


end