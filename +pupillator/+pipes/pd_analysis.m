function myPipe = pd_analysis(varargin)
% PD_ANALYSIS - Extraction of pupil diameter features

import meegpipe.node.*;
import pupillator.nodes.*;
import physioset.event.class_selector;
import physioset.event.value_selector;
import physioset.event.cascade_selector;
import pset.selector.event_selector;

USE_OGE = true;
DO_REPORT = true;

nodeList = {};

% Data importer
myNode = physioset_import.new('Importer', physioset.import.pupillator);
nodeList = [nodeList {myNode}];

% Pre-process the PD traces
myNode = pd_preproc.new;
nodeList = [nodeList {myNode}];

% Extract PD features:
featList = {...
    @(feats, ev, sel) strrep(get(ev{1}, 'Type'), 'block_', ''), ...
    @(feats, ev, sel) get(ev{1}, 'Value'), ...
    @(feats, ev, sel) get_meta(ev{1}, 'Block_1_7'), ...
    @(feats, ev, sel) feats{1}/feats{2}, ...
    @(feats, ev, sel) feats{1} ...
    };

featNames = {...
    'block', ...
    'block_number_1_21', ...
    'block_number_1_7', ...
    'pd_normalized', ... 
    'pd_raw' ...
    };

% Each of these nodes will select one of the 21 blocks. Then it will
% extract the PD features for that block only.
for nodeItr = 1:21   
    
    mySel = {...
        event_selector(value_selector(nodeItr)), ...
        event_selector(class_selector('Type', '^block_dark-pre-pvt$')) ...
        };
  
    myNode = generic_features.new(...
        'TargetSelector',   mySel, ...
        'FirstLevel',       @(x, ev, sel) mean(x(:)), ...
        'SecondLevel',      featList, ...
        'FeatureNames',     featNames, ...
        'DataSelector',     pset.selector.sensor_label('diameter'), ...
        'Name',             ['block-' num2str(nodeItr)] ...
        );
    
    nodeList = [nodeList {myNode}]; %#ok<AGROW>
end


myPipe = pipeline.new(...
    'Name',             'pupillator-pd', ...
    'NodeList',         nodeList, ...
    'Save',             true, ...
    'OGE',              USE_OGE, ...
    'GenerateReport',   DO_REPORT, ...
    varargin{:});


end